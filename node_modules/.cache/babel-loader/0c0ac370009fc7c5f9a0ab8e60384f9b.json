{"ast":null,"code":"var _jsxFileName = \"/home/coelho/Projetos-Trybe/Projetos-Turma23A/sd-023-a-project-trivia-react-redux/src/Pages/GamePage.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { fetchQuestions } from '../helpers/triviaApi';\nimport Question from '../components/Question';\nimport { nextRound } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ERROR_CODE = 3;\n\nclass GamePage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      questions: []\n    };\n\n    this.dispatchNextRound = () => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(nextRound());\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      history\n    } = this.props;\n    const tokenLocalStorage = localStorage.getItem('token');\n    const data = await fetchQuestions(tokenLocalStorage);\n\n    if (data.response_code === ERROR_CODE) {\n      localStorage.setItem('token', '');\n      history.push('/');\n    } else {\n      this.setState({\n        questions: data.results\n      });\n    }\n\n    if (!JSON.parse(localStorage.getItem('ranking'))) {\n      localStorage.setItem('ranking', JSON.stringify([]));\n    }\n  }\n\n  render() {\n    const maxRounds = 5;\n    const {\n      questions\n    } = this.state;\n    const {\n      game\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [game.round >= maxRounds && /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: questions && /*#__PURE__*/_jsxDEV(Question, {\n          question: questions[game.round]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), game.countAnswered > game.round && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => this.dispatchNextRound(),\n        \"data-testid\": \"btn-next\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nGamePage.propTypes = {\n  game: PropTypes.shape({\n    round: PropTypes.number.isRequired,\n    countAnswered: PropTypes.number.isRequired\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nconst mapStateToProps = _ref => {\n  let {\n    game\n  } = _ref;\n  return {\n    game\n  };\n};\n\nexport default connect(mapStateToProps)(GamePage);","map":{"version":3,"names":["React","Component","PropTypes","connect","Redirect","Header","fetchQuestions","Question","nextRound","ERROR_CODE","GamePage","state","questions","dispatchNextRound","dispatch","props","componentDidMount","history","tokenLocalStorage","localStorage","getItem","data","response_code","setItem","push","setState","results","JSON","parse","stringify","render","maxRounds","game","round","countAnswered","propTypes","shape","number","isRequired","func","mapStateToProps"],"sources":["/home/coelho/Projetos-Trybe/Projetos-Turma23A/sd-023-a-project-trivia-react-redux/src/Pages/GamePage.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { fetchQuestions } from '../helpers/triviaApi';\nimport Question from '../components/Question';\nimport { nextRound } from '../redux/actions';\n\nconst ERROR_CODE = 3;\nclass GamePage extends Component {\n  state = {\n    questions: [],\n  };\n\n  async componentDidMount() {\n    const { history } = this.props;\n    const tokenLocalStorage = localStorage.getItem('token');\n    const data = await fetchQuestions(tokenLocalStorage);\n    if (data.response_code === ERROR_CODE) {\n      localStorage.setItem('token', '');\n      history.push('/');\n    } else {\n      this.setState({\n        questions: data.results,\n      });\n    }\n    if (!JSON.parse(localStorage.getItem('ranking'))) {\n      localStorage.setItem('ranking', JSON.stringify([]));\n    }\n  }\n\n  dispatchNextRound = () => {\n    const { dispatch } = this.props;\n    dispatch(nextRound());\n  };\n\n  render() {\n    const maxRounds = 5;\n    const { questions } = this.state;\n    const { game } = this.props;\n    return (\n      <>\n        { game.round >= maxRounds && <Redirect to=\"/feedback\" /> }\n        <Header />\n        <section>\n          {questions && (\n            <Question\n              question={ questions[game.round] }\n            />\n          )}\n        </section>\n        { game.countAnswered > game.round && (\n          <button\n            type=\"button\"\n            onClick={ () => this.dispatchNextRound() }\n            data-testid=\"btn-next\"\n          >\n            Next\n          </button>\n        )}\n      </>\n    );\n  }\n}\n\nGamePage.propTypes = {\n  game: PropTypes.shape({\n    round: PropTypes.number.isRequired,\n    countAnswered: PropTypes.number.isRequired,\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = ({ game }) => ({\n  game,\n});\n\nexport default connect(mapStateToProps)(GamePage);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}