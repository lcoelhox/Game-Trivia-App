{"ast":null,"code":"var _jsxFileName = \"/home/coelho/Projetos-Trybe/Projetos-Turma23A/sd-023-a-project-trivia-react-redux/src/components/Question.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateScore, countAnswered } from '../redux/actions';\nimport './Question.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RANDOM = 0.5;\nconst ONE_SECOND = 1000;\n\nclass Question extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      answered: false,\n      timer: 30,\n      isDisable: false,\n      answers: []\n    };\n\n    this.checkAnswer = answer => {\n      const {\n        question,\n        dispatch\n      } = this.props;\n      const {\n        timer,\n        answered\n      } = this.state;\n      const level = {\n        hard: 3,\n        medium: 2,\n        easy: 1\n      };\n\n      if (!answered && answer === question.correct_answer) {\n        dispatch(updateScore(timer, level[question.difficulty]));\n      }\n\n      if (!answered) {\n        dispatch(countAnswered());\n      }\n\n      this.setState({\n        answered: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => {\n      this.setState(prevState => ({\n        timer: prevState.timer - 1\n      }));\n    }, ONE_SECOND);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      question\n    } = this.props;\n    const {\n      timer\n    } = this.state;\n\n    if (timer === 1) {\n      clearInterval(this.intervalID);\n      this.setState({\n        isDisable: true,\n        timer: 30\n      });\n    }\n\n    if (question.question !== prevProps.question.question) {\n      this.setState({\n        answered: false,\n        timer: 30,\n        isDisable: false,\n        answers: [...question.incorrect_answers, question.correct_answer].sort(() => RANDOM - Math.random())\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  render() {\n    const {\n      question\n    } = this.props;\n    const {\n      isDisable,\n      answered,\n      answers\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": \"question-category\",\n        children: question && question.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"question-text\",\n        children: question && question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), answers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"answer-options\",\n        children: answers.map((answer, index) => {\n          const isCorrect = answer === question.correct_answer;\n          const correctness = isCorrect ? 'correct' : 'wrong';\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: answered ? correctness : 'not-answered',\n            onClick: () => this.checkAnswer(answer),\n            \"data-testid\": isCorrect ? 'correct-answer' : 'wrong-answer',\n            disabled: isDisable,\n            children: answer\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nQuestion.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  question: PropTypes.shape()\n};\nQuestion.defaultProps = {\n  question: {\n    incorrect_answers: []\n  }\n};\nexport default connect()(Question);","map":{"version":3,"names":["React","Component","PropTypes","connect","updateScore","countAnswered","RANDOM","ONE_SECOND","Question","state","answered","timer","isDisable","answers","checkAnswer","answer","question","dispatch","props","level","hard","medium","easy","correct_answer","difficulty","setState","componentDidMount","intervalID","setInterval","prevState","componentDidUpdate","prevProps","clearInterval","incorrect_answers","sort","Math","random","componentWillUnmount","render","category","length","map","index","isCorrect","correctness","propTypes","func","isRequired","shape","defaultProps"],"sources":["/home/coelho/Projetos-Trybe/Projetos-Turma23A/sd-023-a-project-trivia-react-redux/src/components/Question.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateScore, countAnswered } from '../redux/actions';\nimport './Question.css';\n\nconst RANDOM = 0.5;\nconst ONE_SECOND = 1000;\n\nclass Question extends Component {\n  state = {\n    answered: false,\n    timer: 30,\n    isDisable: false,\n    answers: [],\n  };\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => {\n      this.setState((prevState) => ({ timer: prevState.timer - 1 }));\n    }, ONE_SECOND);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { question } = this.props;\n    const { timer } = this.state;\n    if (timer === 1) {\n      clearInterval(this.intervalID);\n      this.setState({\n        isDisable: true,\n        timer: 30,\n      });\n    }\n    if (question.question !== prevProps.question.question) {\n      this.setState({\n        answered: false,\n        timer: 30,\n        isDisable: false,\n        answers: [...question.incorrect_answers, question.correct_answer]\n          .sort(() => RANDOM - Math.random()),\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  checkAnswer = (answer) => {\n    const { question, dispatch } = this.props;\n    const { timer, answered } = this.state;\n    const level = { hard: 3, medium: 2, easy: 1 };\n    if (!answered && answer === question.correct_answer) {\n      dispatch(updateScore(timer, level[question.difficulty]));\n    }\n    if (!answered) {\n      dispatch(countAnswered());\n    }\n    this.setState({\n      answered: true,\n    });\n  };\n\n  render() {\n    const { question } = this.props;\n    const { isDisable, answered, answers } = this.state;\n    return (\n      <div>\n        <h3 data-testid=\"question-category\">\n          {question && question.category}\n        </h3>\n        <p data-testid=\"question-text\">\n          {question && question.question}\n        </p>\n        {answers.length > 0 && (\n          <div data-testid=\"answer-options\">\n            { answers.map((answer, index) => {\n              const isCorrect = answer === question.correct_answer;\n              const correctness = isCorrect ? 'correct' : 'wrong';\n              return (\n                <button\n                  key={ index }\n                  type=\"button\"\n                  className={ answered ? correctness : 'not-answered' }\n                  onClick={ () => this.checkAnswer(answer) }\n                  data-testid={ isCorrect ? 'correct-answer' : 'wrong-answer' }\n                  disabled={ isDisable }\n                >\n                  {answer}\n                </button>\n              );\n            })}\n          </div>\n        ) }\n      </div>\n    );\n  }\n}\n\nQuestion.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  question: PropTypes.shape(),\n};\n\nQuestion.defaultProps = {\n  question: {\n    incorrect_answers: [],\n  },\n};\n\nexport default connect()(Question);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}