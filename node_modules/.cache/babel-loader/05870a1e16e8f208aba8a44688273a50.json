{"ast":null,"code":"import md5 from 'crypto-js/md5';\nexport const USER_LOGIN = 'USER_LOGIN';\nexport const FAIL_FECTH = 'FAIL_FECTH';\nexport const UPDATE_SCORE = 'UPDATE_SCORE';\nexport const NEXT_ROUND = 'NEXT_ROUND';\nexport const COUNT_ANSWERED = 'COUNT_ANSWERED';\nexport const NEW_GAME = 'NEW_GAME';\nexport const userLogin = _ref => {\n  let {\n    name,\n    email\n  } = _ref;\n  const userData = md5(email).toString();\n  return {\n    type: USER_LOGIN,\n    name,\n    email,\n    gravatar: `https://www.gravatar.com/avatar/${userData}`\n  };\n};\nexport const failFecth = error => ({\n  type: FAIL_FECTH,\n  error\n});\nexport const updateScore = (timer, level) => {\n  const valuesoma = 10;\n  return {\n    type: UPDATE_SCORE,\n    score: valuesoma + timer * level\n  };\n};\nexport const nextRound = () => ({\n  type: NEXT_ROUND\n});\nexport const countAnswered = () => ({\n  type: COUNT_ANSWERED\n});\nexport const newGame = () => ({\n  type: NEW_GAME\n});","map":{"version":3,"names":["md5","USER_LOGIN","FAIL_FECTH","UPDATE_SCORE","NEXT_ROUND","COUNT_ANSWERED","NEW_GAME","userLogin","name","email","userData","toString","type","gravatar","failFecth","error","updateScore","timer","level","valuesoma","score","nextRound","countAnswered","newGame"],"sources":["/home/coelho/Projetos-Trybe/Projetos-Turma23A/sd-023-a-project-trivia-react-redux/src/redux/actions/index.js"],"sourcesContent":["import md5 from 'crypto-js/md5';\n\nexport const USER_LOGIN = 'USER_LOGIN';\nexport const FAIL_FECTH = 'FAIL_FECTH';\nexport const UPDATE_SCORE = 'UPDATE_SCORE';\nexport const NEXT_ROUND = 'NEXT_ROUND';\nexport const COUNT_ANSWERED = 'COUNT_ANSWERED';\nexport const NEW_GAME = 'NEW_GAME';\n\nexport const userLogin = ({ name, email }) => {\n  const userData = md5(email).toString();\n  return {\n    type: USER_LOGIN,\n    name,\n    email,\n    gravatar: `https://www.gravatar.com/avatar/${userData}`,\n  };\n};\n\nexport const failFecth = (error) => ({\n  type: FAIL_FECTH,\n  error,\n});\n\nexport const updateScore = (timer, level) => {\n  const valuesoma = 10;\n  return {\n    type: UPDATE_SCORE,\n    score: valuesoma + timer * level,\n  };\n};\n\nexport const nextRound = () => ({\n  type: NEXT_ROUND,\n});\n\nexport const countAnswered = () => ({\n  type: COUNT_ANSWERED,\n});\n\nexport const newGame = () => ({\n  type: NEW_GAME,\n});\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,eAAhB;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AAEP,OAAO,MAAMC,SAAS,GAAG,QAAqB;EAAA,IAApB;IAAEC,IAAF;IAAQC;EAAR,CAAoB;EAC5C,MAAMC,QAAQ,GAAGV,GAAG,CAACS,KAAD,CAAH,CAAWE,QAAX,EAAjB;EACA,OAAO;IACLC,IAAI,EAAEX,UADD;IAELO,IAFK;IAGLC,KAHK;IAILI,QAAQ,EAAG,mCAAkCH,QAAS;EAJjD,CAAP;AAMD,CARM;AAUP,OAAO,MAAMI,SAAS,GAAIC,KAAD,KAAY;EACnCH,IAAI,EAAEV,UAD6B;EAEnCa;AAFmC,CAAZ,CAAlB;AAKP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;EAC3C,MAAMC,SAAS,GAAG,EAAlB;EACA,OAAO;IACLP,IAAI,EAAET,YADD;IAELiB,KAAK,EAAED,SAAS,GAAGF,KAAK,GAAGC;EAFtB,CAAP;AAID,CANM;AAQP,OAAO,MAAMG,SAAS,GAAG,OAAO;EAC9BT,IAAI,EAAER;AADwB,CAAP,CAAlB;AAIP,OAAO,MAAMkB,aAAa,GAAG,OAAO;EAClCV,IAAI,EAAEP;AAD4B,CAAP,CAAtB;AAIP,OAAO,MAAMkB,OAAO,GAAG,OAAO;EAC5BX,IAAI,EAAEN;AADsB,CAAP,CAAhB"},"metadata":{},"sourceType":"module"}